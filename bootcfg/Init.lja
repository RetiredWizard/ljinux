# Detect early serial connections and make logging immediately available
_earlyconnection

# Add /lib to path
pexec from sys import path as syspath
pexec syspath.append("/LjinuxRoot/lib")
pexec del syspath
pexec systemprints(1, "System path updated")

# Connect to a network on boot (example uses wifi driver)
#modprobe driver_wifi as network
#pexec systemprints(2, "Connecting to your network")
#iwctl --passphrase "your wifi password" station wifi connect ssid_here
#pexec systemprints(1, "Connecting to your network")
#pexec systemprints(2, "Sync time via ntp")
#timesync
#pexec systemprints(1, "Sync time via ntp")

# Uncomment this to activate telnet serial
# Depends on network being up
#pexec systemprints(2, "Activate telnet")
#telnet setup -q # quiet
#terminal activate ttyTELNET0
#pexec systemprints(1, "Activate telnet")


## If no network use this instead
advance_build_date

# Configure init overrides
#INIT = "normal"

# Clear the dmesg log on low-end boards
#_ndmesg

# Clear boot buffer
# clear

# Final system configuration
cd /home/board
USER = "board"
fpexec /LjinuxRoot/etc/hostname-reload.py
SECURITY = "on"

# Wait for connection
_waitforconnection

# Late serial connection
pexec term.hold_stdout = False
pexec term.flush_writes()
pexec systemprints(1, "Dmesg flushed")

# Stop dmesg from flooding tty
pexec systemprints(1, "Suppress dmesg flooding")
pexec term.dmtex_suppress = True

# Checks
_rebootprompt
_devmodeprompt

# Setup terminal
fpexec /bin/ljinuxtitle.py
exec .basedrc
